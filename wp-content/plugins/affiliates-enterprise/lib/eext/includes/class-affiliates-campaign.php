<?php
 class Affiliates_Campaign { protected static $IXAP5 = null; protected static $IXAP6 = null; protected static $IXAP7 = null; protected static $affiliate_id_encoder = null; protected static $IXAP8 = null; protected $campaign_id = null; protected $affiliate_id = null; protected $name = null; protected $description = null; protected $from_date = null; protected $thru_date = null; protected $type = null; protected $status = null; protected $hits = null; protected $visits = null; protected $referrals = null; protected $url = null; public function __construct( $IXAP9 = null ) { self::initialize( $this, $IXAP9 ); } private static function initialize( &$IXAP10, $IXAP9 ) { if ( isset( $IXAP9->campaign_id ) ) { $IXAP10->campaign_id = $IXAP9->campaign_id; } if ( isset( $IXAP9->affiliate_id ) ) { $IXAP10->affiliate_id = $IXAP9->affiliate_id; } if ( isset( $IXAP9->name ) ) { $IXAP10->name = $IXAP9->name; } if ( isset( $IXAP9->description ) ) { $IXAP10->description = $IXAP9->description; } if ( isset( $IXAP9->from_date ) ) { $IXAP10->from_date = $IXAP9->from_date; } if ( isset( $IXAP9->thru_date ) ) { $IXAP10->thru_date = $IXAP9->thru_date; } if ( isset( $IXAP9->type ) ) { $IXAP10->type = $IXAP9->type; } if ( isset( $IXAP9->status ) ) { $IXAP10->status = $IXAP9->status; } } public function create() { global $affiliates_db; $IXAP11 = null; if ( $this->campaign_id === null ) { if ( $this->affiliate_id !== null ) { $IXAP4 = $affiliates_db->get_tablename( 'campaigns' ); if ( $affiliates_db->query( "INSERT INTO $IXAP4 " . "SET affiliate_id = %d, name = %s, description = %s, from_date = %s, thru_date = %s, type = %s, status = %s", intval( $this->affiliate_id ), $this->name, $this->description, $this->from_date, $this->thru_date, $this->type, $this->status ) ) { $this->campaign_id = $affiliates_db->get_value( "SELECT LAST_INSERT_ID()" ); $IXAP11 = $this->campaign_id; } } } return $IXAP11; } public function read( $IXAP12 ) { global $affiliates_db; $IXAP11 = null; $IXAP4 = $affiliates_db->get_tablename( 'campaigns' ); if ( $IXAP13 = $affiliates_db->get_objects( "SELECT * FROM $IXAP4 WHERE campaign_id = %d", intval( $IXAP12 ) ) ) { if ( $IXAP14 = array_shift( $IXAP13 ) ) { self::initialize( $this, $IXAP14 ); $IXAP11 = $this; } } return $IXAP11; } public function update() { global $affiliates_db; $IXAP11 = false; if ( $this->campaign_id !== null ) { $IXAP4 = $affiliates_db->get_tablename( 'campaigns' ); if ( $affiliates_db->query( "UPDATE $IXAP4 " . "SET affiliate_id = %d, name = %s, description = %s, from_date = %s, thru_date = %s, type = %s, status = %s " . "WHERE campaign_id = %d", intval( $this->affiliate_id ), $this->name, $this->description, $this->from_date, $this->thru_date, $this->type, $this->status, intval( $this->campaign_id ) ) ) { $IXAP11 = true; } } return $IXAP11; } public function delete() { global $affiliates_db; $IXAP11 = false; if ( $this->campaign_id !== null ) { $IXAP4 = $affiliates_db->get_tablename( 'campaigns' ); if ( $affiliates_db->query( "DELETE FROM $IXAP4 " . "WHERE campaign_id = %d", intval( $this->campaign_id ) ) ) { $IXAP11 = true; } } return $IXAP11; } public function get_hits( $IXAP15 = null , $IXAP16 = null, $IXAP17 = false ) { global $affiliates_db; $IXAP18 = $affiliates_db->get_tablename( 'hits' ); $IXAP11 = 0; $IXAP19 = " WHERE affiliate_id = %d AND campaign_id = %d "; $values = array( $this->affiliate_id, $this->campaign_id ); if ( $IXAP15 ) { if ( $IXAP17 ) { $IXAP20 = date( 'Y-m-d H:i:s', strtotime( $IXAP15 ) ); } else { $IXAP15 = date( 'Y-m-d', strtotime( $IXAP15 ) ); } } if ( $IXAP16 ) { if ( $IXAP17 ) { $IXAP21 = date( 'Y-m-d H:i:s', strtotime( $IXAP16 ) ); } else { $IXAP16 = date( 'Y-m-d', strtotime( $IXAP16 ) + 24*3600 ); } } if ( $IXAP15 && $IXAP16 ) { if ( $IXAP17 ) { $IXAP19 .= " AND datetime >= %s AND datetime < %s "; $values[] = $IXAP20; $values[] = $IXAP21; } else { $IXAP19 .= " AND date >= %s AND date < %s "; $values[] = $IXAP15; $values[] = $IXAP16; } } else if ( $IXAP15 ) { if ( $IXAP17 ) { $IXAP19 .= " AND datetime >= %s "; $values[] = $IXAP20; } else { $IXAP19 .= " AND date >= %s "; $values[] = $IXAP15; } } else if ( $IXAP16 ) { if ( $IXAP17 ) { $IXAP19 .= " AND datetime < %s "; $values[] = $IXAP21; } else { $IXAP19 .= " AND date < %s "; $values[] = $IXAP16; } } $IXAP11 = intval( $affiliates_db->get_value( "SELECT sum(count) FROM $IXAP18 $IXAP19", $values ) ); return $IXAP11; } public function get_visits( $IXAP15 = null , $IXAP16 = null, $IXAP17 = false ) { global $affiliates_db; $IXAP18 = $affiliates_db->get_tablename( 'hits' ); $IXAP11 = 0; $IXAP19 = " WHERE affiliate_id = %d AND campaign_id = %d "; $values = array( $this->affiliate_id, $this->campaign_id ); if ( $IXAP15 ) { if ( $IXAP17 ) { $IXAP20 = date( 'Y-m-d H:i:s', strtotime( $IXAP15 ) ); } else { $IXAP15 = date( 'Y-m-d', strtotime( $IXAP15 ) ); } } if ( $IXAP16 ) { if ( $IXAP17 ) { $IXAP21 = date( 'Y-m-d H:i:s', strtotime( $IXAP16 ) ); } else { $IXAP16 = date( 'Y-m-d', strtotime( $IXAP16 ) + 24*3600 ); } } if ( $IXAP15 && $IXAP16 ) { if ( $IXAP17 ) { $IXAP19 .= " AND datetime >= %s AND datetime < %s "; $values[] = $IXAP20; $values[] = $IXAP21; } else { $IXAP19 .= " AND date >= %s AND date < %s "; $values[] = $IXAP15; $values[] = $IXAP16; } } else if ( $IXAP15 ) { if ( $IXAP17 ) { $IXAP19 .= " AND datetime >= %s "; $values[] = $IXAP20; } else { $IXAP19 .= " AND date >= %s "; $values[] = $IXAP15; } } else if ( $IXAP16 ) { if ( $IXAP17 ) { $IXAP19 .= " AND datetime < %s "; $values[] = $IXAP21; } else { $IXAP19 .= " AND date < %s "; $values[] = $IXAP16; } } $IXAP11 = intval( $affiliates_db->get_value( "SELECT SUM(visits) FROM " . "(SELECT count(DISTINCT IP) visits FROM $IXAP18 $IXAP19 GROUP BY DATE) tmp", $values ) ); return $IXAP11; } function get_referrals( $IXAP15 = null , $IXAP16 = null, $status = null, $IXAP17 = false ) { global $affiliates_db; $referrals_table = $affiliates_db->get_tablename( 'referrals' ); $IXAP11 = 0; $IXAP19 = " WHERE affiliate_id = %d AND campaign_id = %d "; $values = array( $this->affiliate_id, $this->campaign_id ); if ( $IXAP15 ) { if ( $IXAP17 ) { $IXAP15 = date( 'Y-m-d H:i:s', strtotime( $IXAP15 ) ); } else { $IXAP15 = date( 'Y-m-d', strtotime( $IXAP15 ) ); } } if ( $IXAP16 ) { if ( $IXAP17 ) { $IXAP16 = date( 'Y-m-d H:i:s', strtotime( $IXAP16 ) ); } else { $IXAP16 = date( 'Y-m-d', strtotime( $IXAP16 ) + 24*3600 ); } } if ( $IXAP15 && $IXAP16 ) { $IXAP19 .= " AND datetime >= %s AND datetime < %s "; $values[] = $IXAP15; $values[] = $IXAP16; } else if ( $IXAP15 ) { $IXAP19 .= " AND datetime >= %s "; $values[] = $IXAP15; } else if ( $IXAP16 ) { $IXAP19 .= " AND datetime < %s "; $values[] = $IXAP16; } if ( !empty( $status ) ) { $IXAP19 .= " AND status = %s "; $values[] = $status; } else { $IXAP19 .= " AND status IN ( %s, %s ) "; $values[] = AFFILIATES_REFERRAL_STATUS_ACCEPTED; $values[] = AFFILIATES_REFERRAL_STATUS_CLOSED; } $IXAP11 = intval( $affiliates_db->get_value( "SELECT count(*) FROM $referrals_table $IXAP19", $values ) ); return $IXAP11; } public function get_totals( $IXAP15 = null , $IXAP16 = null, $status = null, $currency_id = null ) { global $affiliates_db; $referrals_table = $affiliates_db->get_tablename( 'referrals' ); $IXAP19 = " WHERE affiliate_id = %d AND campaign_id = %d "; $values = array( $this->affiliate_id, $this->campaign_id ); if ( !empty( $currency_id ) ) { $IXAP19 .= " AND currency_id = %s "; $values[] = $currency_id; } if ( $IXAP15 ) { $IXAP15 = date( 'Y-m-d', strtotime( $IXAP15 ) ); } if ( $IXAP16 ) { $IXAP16 = date( 'Y-m-d', strtotime( $IXAP16 ) + 24*3600 ); } if ( $IXAP15 && $IXAP16 ) { $IXAP19 .= " AND datetime >= %s AND datetime < %s "; $values[] = $IXAP15; $values[] = $IXAP16; } else if ( $IXAP15 ) { $IXAP19 .= " AND datetime >= %s "; $values[] = $IXAP15; } else if ( $IXAP16 ) { $IXAP19 .= " AND datetime < %s "; $values[] = $IXAP16; } if ( !empty( $status ) ) { $IXAP19 .= " AND status = %s "; $values[] = $status; } else { $IXAP19 .= " AND status IN ( %s, %s ) "; $values[] = AFFILIATES_REFERRAL_STATUS_ACCEPTED; $values[] = AFFILIATES_REFERRAL_STATUS_CLOSED; } $IXAP22 = $affiliates_db->get_objects( "SELECT SUM(amount) total, currency_id FROM $referrals_table
			$IXAP19
			GROUP BY currency_id
			", $values ); if ( $IXAP22 ) { $IXAP11 = array(); foreach( $IXAP22 as $IXAP23 ) { if ( ( $IXAP23->currency_id !== null ) && ( $IXAP23->total !== null ) ) { $IXAP11[$IXAP23->currency_id] = $IXAP23->total; } } return $IXAP11; } else { return false; } } public function get_url( $IXAP24 = array() ) { $IXAP8 = self::$IXAP8; if ( !empty( $IXAP24['url'] ) ) { $IXAP8 = $IXAP24['url'] ; } return Affiliates_Url_Renderer::get_affiliate_url( $IXAP8, $this->affiliate_id, $this->campaign_id ); } public function __get( $name ) { $value = null; switch( $name ) { case 'campaign_id' : case 'affiliate_id' : case 'name' : case 'description' : case 'from_date' : case 'thru_date' : case 'type' : case 'status' : $value = $this->$name; break; case 'hits' : $value = $this->get_hits(); break; case 'visits' : $value = $this->get_visits(); break; case 'referrals' : $value = $this->get_referrals(); break; case 'totals' : $value = $this->get_totals(); break; case 'url' : $value = $this->get_url(); break; } return $value; } public function __set( $name, $value ) { switch( $name ) { case 'campaign_id' : case 'affiliate_id' : case 'name' : case 'description' : case 'from_date' : case 'thru_date' : case 'type' : case 'status' : $this->$name = $value; break; } return $value; } public function to_array() { $IXAP11 = array( 'campaign_id' => $this->campaign_id, 'affiliate_id' => $this->affiliate_id, 'name' => $this->name, 'description' => $this->description, 'from_date' => $this->from_date, 'thru_date' => $this->thru_date, 'type' => $this->type, 'status' => $this->status, 'hits' => $this->get_hits(), 'visits' => $this->get_visits(), 'referrals' => $this->get_referrals(), 'totals' => $this->get_totals() ); return $IXAP11; } public static function init() { } public static function is_affiliate_campaign( $affiliate_id, $IXAP12 ) { return self::get_affiliate_campaign($affiliate_id, $IXAP12) !== null; } public static function get_affiliate_campaign( $affiliate_id, $IXAP12 ) { global $affiliates_db; $IXAP10 = null; $IXAP4 = $affiliates_db->get_tablename( 'campaigns' ); if ( $IXAP11 = $affiliates_db->get_objects( "SELECT * FROM $IXAP4 WHERE campaign_id = %d AND affiliate_id = %d", intval( $IXAP12 ), intval( $affiliate_id ) ) ) { if ( $IXAP11 = array_shift( $IXAP11 ) ) { $IXAP10 = new Affiliates_Campaign( $IXAP11 ); } } return $IXAP10; } public static function get_campaigns( $affiliate_id = null, $params = array() ) { global $affiliates_db; $IXAP4 = $affiliates_db->get_tablename( 'campaigns' ); $IXAP25 = array(); if ( empty( $affiliate_id ) ) { $IXAP26 = $affiliates_db->get_objects( "SELECT * FROM $IXAP4" ); } else if ( is_array( $affiliate_id ) ) { if ( count( $affiliate_id ) > 0 ) { $affiliate_ids = array_map( 'intval', implode(',', $affiliate_id ) ); $IXAP26 = $affiliates_db->get_objects( "SELECT * FROM $IXAP4 WHERE affiliate_id IN (" . $affiliate_ids . ")" ); } } else { $IXAP26 = $affiliates_db->get_objects( "SELECT * FROM $IXAP4 WHERE affiliate_id = %d", intval( $affiliate_id ) ); } foreach( $IXAP26 as $IXAP11 ) { $IXAP25[] = new Affiliates_Campaign( $IXAP11 ); } return $IXAP25; } public static function evaluate( $IXAP27, $affiliate_id, &$IXAP28 = null ) { $IXAP27 = trim( $IXAP27 ); $IXAP27 = strtolower( $IXAP27 ); if ( !self::is_affiliate_campaign( $affiliate_id, $IXAP27 ) ) { $IXAP27 = null; } return $IXAP27; } public static function set_pname( $IXAP5 ) { self::$IXAP5 = $IXAP5; } public static function get_pname() { return self::$IXAP5; } public static function set_cname( $IXAP6 ) { self::$IXAP6 = $IXAP6; } public static function get_name() { return self::$IXAP6; } public static function set_url_renderer( $IXAP9 ) { self::$IXAP7 = $IXAP9; } public static function get_url_renderer() { return self::$IXAP7; } public static function set_affiliate_id_encoder( $IXAP29 ) { self::$affiliate_id_encoder = $IXAP29; } public static function get_affiliate_id_encoder() { return self::$affiliate_id_encoder; } public static function set_base_url( $IXAP30 ) { self::$IXAP8 = $IXAP30; } public static function get_base_url() { return self::$IXAP8; } } Affiliates_Campaign::init(); 