<?php
 class Affiliates_Multi_Tier { const NONCE = 'nonce-tiers'; const IXAP76 = 'tiers'; const IXAP77 = 'aff_ent_enable_tiers'; const IXAP78 = 10; const N_TIERS = 'aff_ent_n_tiers'; const IXAP79 = 'aff_ent_tier_rates'; const IXAP80 = 'aff_allow_tier_referrals_on_admin'; const INCLUDE_DIRECT = 'aff_include_direct'; const IXAP81 = 'aff_ent_relative_tier_rates'; public static function init() { add_action( 'affiliates_admin_menu', array( __CLASS__, 'affiliates_admin_menu' ) ); if ( get_option( self::IXAP77, false ) ) { add_action( 'affiliates_added_affiliate', array( __CLASS__, 'affiliates_added_affiliate' ) ); add_action( 'affiliates_referral', array( __CLASS__, 'affiliates_referral' ), 10, 2 ); add_action( 'affiliates_after_edit_affiliate_attributes', array( __CLASS__, 'affiliates_after_edit_affiliate_attributes' ) ); } } public static function affiliates_added_affiliate( $affiliate_id ) { global $affiliates_db; if ( !is_admin() || get_option( self::IXAP80, false ) ) { require_once( AFFILIATES_CORE_LIB . '/class-affiliates-service.php' ); if ( $IXAP82 = Affiliates_Service::get_referrer_id() ) { if ( $IXAP82 !== affiliates_get_direct_id() || get_option( self::INCLUDE_DIRECT, false ) ) { if ( $affiliate_id != $IXAP82 ) { $affiliates_relations = $affiliates_db->get_tablename( 'affiliates_relations' ); if ( !$affiliates_db->get_value( "SELECT from_affiliate_id FROM $affiliates_relations WHERE to_affiliate_id = %d", $affiliate_id ) ) { $IXAP83 = date( 'Y-m-d', time() ); if ( $affiliates_db->query( "INSERT INTO $affiliates_relations (from_affiliate_id,to_affiliate_id,type,from_date) VALUES (%d,%d,%s,%s)", intval( $IXAP82 ), intval( $affiliate_id ), 'referral', $IXAP83 ) ) { do_action( 'affiliates_added_affiliate_relation', $IXAP82, $affiliate_id, 'referral', $IXAP83 ); } } } } } } } public static function affiliates_stored_affiliate( $affiliate_id, $affiliate_user_id ) { self::affiliates_adedd_affiliate( $affiliate_id ); } public static function affiliates_referral( $referral_id, $params ) { global $affiliates_db, $affiliates_enterprise_doing_tiers; if ( !apply_filters( 'affiliates_process_tiers_referral', true, $referral_id, $params ) ) { return; } if ( !isset( $affiliates_enterprise_doing_tiers ) || !$affiliates_enterprise_doing_tiers ) { $affiliates_enterprise_doing_tiers = true; $referrals_table = $affiliates_db->get_tablename( 'referrals' ); $affiliates_relations_table = $affiliates_db->get_tablename( 'affiliates_relations' ); $referrals = $affiliates_db->get_objects( "SELECT * FROM $referrals_table WHERE referral_id = %d", $referral_id ); if ( count( $referrals ) ) { $referral = $referrals[0]; if ( !apply_filters( 'affiliates_process_tiers_referral_type', $referral->type != 'product', $referral->type, $referral_id, $params, $referral ) ) { $affiliates_enterprise_doing_tiers = false; return; } $affiliate_id = $referral->affiliate_id; $IXAP84 = $affiliate_id; $IXAP85 = get_option( self::IXAP79, array() ); $n_tiers = get_option( self::N_TIERS, self::IXAP78 ); $IXAP86 = get_option( self::IXAP81, false ); for ( $i = 0; $i < $n_tiers; $i++ ) { $IXAP87 = $affiliates_db->get_value( "SELECT from_affiliate_id FROM $affiliates_relations_table WHERE to_affiliate_id = %d ORDER BY from_date DESC", $IXAP84 ); if ( !$IXAP87 ) { break; } if ( !affiliates_check_affiliate_id( $IXAP87 ) ) { break; } $data = isset( $params['data'] ) ? $params['data'] : array(); if ( !is_array( $data ) ) { $data = array(); } $data['tier_level'] = array( 'title' => 'Tier Level', 'domain' => AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN, 'value' => $i + 1 ); $data['tier_affiliate_id'] = array( 'title' => 'Tier Affiliate ID', 'domain' => AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN, 'value' => $IXAP87 ); $IXAP88 = get_option( self::IXAP79 . '_' . intval( $IXAP87 ), array() ); if ( isset( $IXAP85[$i] ) || isset( $IXAP88[$i] ) ) { if ( isset( $IXAP88[$i] ) ) { $IXAP89 = $IXAP88[$i]; } else { $IXAP89 = $IXAP85[$i]; } if ( isset( $params['base_amount'] ) || $IXAP86 ) { if ( bccomp( $IXAP89, '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) { if ( !$IXAP86 ) { $amount = bcmul( $params['base_amount'], $IXAP89, AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } else { $amount = bcmul( $referral->amount, $IXAP89, AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } $IXAP90 = new Affiliates_Referral_WordPress(); $IXAP90->add_referrals( array( $IXAP87 ), $referral->post_id, $referral->description, $data, null, $amount, $referral->currency_id, $referral->status, $referral->type, $referral->reference ); } } } $IXAP84 = $IXAP87; } } $affiliates_enterprise_doing_tiers = false; } } public static function affiliates_admin_menu() { $IXAP57 = add_submenu_page( 'affiliates-admin', __( 'Tiers', AFFILIATES_PRO_PLUGIN_DOMAIN ), __( 'Tiers', AFFILIATES_PRO_PLUGIN_DOMAIN ), AFFILIATES_ADMINISTER_OPTIONS, 'affiliates-admin-tiers', array( __CLASS__, 'affiliates_admin_tiers' ) ); $IXAP75[] = $IXAP57; add_action( 'admin_print_styles-' . $IXAP57, 'affiliates_admin_print_styles' ); add_action( 'admin_print_scripts-' . $IXAP57, 'affiliates_admin_print_scripts' ); add_action( 'admin_print_styles-' . $IXAP57, 'affiliates_pro_admin_print_styles' ); add_action( 'admin_print_scripts-' . $IXAP57, 'affiliates_pro_admin_print_scripts' ); add_action( 'admin_print_styles-affiliates_page_affiliates-admin-affiliates', array( __CLASS__, 'admin_print_styles' ) ); add_action( 'admin_print_scripts-affiliates_page_affiliates-admin-affiliates', array( __CLASS__, 'admin_print_scripts' ) ); } public static function admin_print_styles() { global $affiliates_enterprise_version; if ( !wp_style_is( 'chosen' ) ) { wp_enqueue_style( 'chosen', AFFILIATES_ENTERPRISE_PLUGIN_URL . 'css/chosen/chosen.min.css', array(), $affiliates_enterprise_version ); } } public static function admin_print_scripts() { global $affiliates_enterprise_version; if ( !wp_script_is( 'chosen' ) ) { wp_enqueue_script( 'chosen', AFFILIATES_ENTERPRISE_PLUGIN_URL . 'js/chosen/chosen.jquery.min.js', array( 'jquery' ), $affiliates_enterprise_version ); } } public static function affiliates_admin_tiers() { if ( !current_user_can( AFFILIATES_ADMINISTER_OPTIONS ) ) { wp_die( __( 'Access denied.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } if ( get_option( self::IXAP79, null ) === null ) { add_option( self::IXAP79, array(), null, 'no' ); } if ( get_option( self::IXAP77, null ) === null ) { add_option( self::IXAP77, false, null, 'no' ); } if ( get_option( self::IXAP80, null ) === null ) { add_option( self::IXAP80, false, null, 'no' ); } if ( get_option( self::INCLUDE_DIRECT, null ) === null ) { add_option( self::INCLUDE_DIRECT, false, null, 'no' ); } if ( get_option( self::N_TIERS, null ) === null ) { add_option( self::N_TIERS, self::IXAP78, null, 'no' ); } if ( get_option( self::IXAP81, null ) === null ) { add_option( self::IXAP81, false, null, 'no' ); } $IXAP91 = ''; $n_tiers = get_option( self::N_TIERS, self::IXAP78 ); if ( isset( $_POST['submit'] ) ) { if ( wp_verify_nonce( $_POST[self::NONCE], self::IXAP76 ) ) { $n_tiers = isset( $_POST[self::N_TIERS] ) ? intval( $_POST[self::N_TIERS] ) : self::IXAP78; if ( $n_tiers < 1 ) { $n_tiers = 1; } if ( $n_tiers > 111 && !defined( 'AFF_ENT_UNLIMITED' ) ) { $n_tiers = 111; } update_option( self::N_TIERS, $n_tiers ); $IXAP85 = array(); for( $i = 0; $i < $n_tiers; $i++ ) { if ( isset( $_POST['rate-' . $i] ) ) { $IXAP89 = bcadd( '0', $_POST['rate-' . $i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); if ( bccomp( $IXAP89, '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) < 0 ) { $IXAP89 = bcadd( '0', '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } else if ( bccomp( $IXAP89, '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) { $IXAP89 = bcadd( '0', '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } $IXAP85[$i] = $IXAP89; } } update_option( self::IXAP79, $IXAP85 ); update_option( self::IXAP77, isset( $_POST[self::IXAP77] ) ); update_option( self::IXAP80, isset( $_POST[self::IXAP80] ) ); update_option( self::INCLUDE_DIRECT, isset( $_POST[self::INCLUDE_DIRECT] ) ); update_option( self::IXAP81, isset( $_POST[self::IXAP81] ) ); } } $IXAP85 = get_option( self::IXAP79, array() ); $IXAP92 = get_option( self::IXAP77, false ); $include_direct = get_option( self::INCLUDE_DIRECT, false ); $IXAP93 = get_option( self::IXAP80, false ); $IXAP86 = get_option( self::IXAP81, false ); $IXAP23 = 0; for( $i = 0; $i < $n_tiers; $i++ ) { if ( !empty( $IXAP85[$i] ) ) { $IXAP89 = bcadd( '0', $IXAP85[$i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); $sum = bcadd( $IXAP23, $IXAP85[$i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); if ( ( bccomp( $sum, '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) && ( bccomp( $IXAP85[$i], '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) ) { $IXAP91 .= '<div class="warning">'; $IXAP91 .= sprintf( __( 'The rate %s indicated for level %d exceeds 1.00 for the sum of rates.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), $IXAP85[$i], $i + 1 ); $IXAP91.= '</div>'; } $IXAP23 = bcadd( $IXAP23, $IXAP85[$i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } } if ( bccomp( $IXAP23, '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) { $IXAP91 .= '<div class="warning">'; $IXAP91 .= sprintf( __( 'The sum of rates is %s and exceeds 1.00.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), $IXAP23 ); $IXAP91 .= ' '; $IXAP91 .= __( 'Although this might be intended, the total commission granted should normally not exceed the net transaction value on which commissions are based.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); $IXAP91 .= ' '; if ( $IXAP86 ) { $IXAP91 .= __( 'As relative level rates apply, these rates are relative to the amount that is credited to the O.R. instead of the order amount. Note that a sum of level rates equal to or greater than 1.00 means that the total commissions credited to tiers, is equal to - or higher than - the commission granted to the O.R.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); } else { $IXAP91 .= __( 'These rates are relative to the order amount. Note that a sum of level rates equal to or greater than 1.00 means that the total commissions credited to tiers, is equal to - or higher than - the originating order amount.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); } $IXAP91 .= '</div>'; } echo '<h1>' . __( 'Tiers', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</h1>'; echo '<div class="manage" style="margin-right:1em;">'; echo '<p class="description">'; echo sprintf( __( 'Referral rates for tier levels %d to %d are expressed using decimal numbers.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), 1, $n_tiers ); echo '</p>'; echo '<p class="description">'; echo __( 'Example: Use <strong>0.20</strong> to credit 20 percent commissions on order amounts.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<p class="description">'; echo sprintf( __( 'A rate of %s results in no referral credited for affiliates in that level. The maximum rate is %s where the full amount is credited as commission.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), bcadd( '0', '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ), bcadd( '0', '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) ); echo '</p>'; echo '<p class="description">'; echo __( 'Tier referrals are created when an affiliate - the original referrer <strong>O.R.</strong> - is credited with a referral.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<p class="description">'; echo __( 'Levels represent the degree of relationship between affiliates. The affiliate who referred the O.R. is credited with a referral at the rate indicated for Level 1. Level 2 affiliates have referred affiliates in Level 1 etc.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<p class="description">'; echo __( 'How tier levels work:', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<ul class="description">'; echo '<li>' . __( 'Affiliate B has referred affiliate A.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</li>'; echo '<li>' . __( 'When affiliate A is credited with a referral, so is affiliate B at the commission rate set for Level 1.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</li>'; echo '<li>' . __( 'If affiliate B was referred by affiliate C and a rate is set for Level 2, affiliate C will also be credited with a referral at the rate for that level.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</li>'; echo '</ul>'; echo '<p class="description">'; echo __( 'Example:', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<ul class="description">'; echo '<li>' . __( 'Assuming 30% for normal referrals and these rates for Level 1: 20%, Level 2: 5%, for an order of 100$, affiliate A gets a 30$ referral, affiliate B is credited with $20 and affiliate C gets $5.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</li>'; echo '</ul>'; echo '</div>'; echo '<form action="" name="tiers" method="post">' . '<div>'; echo '<p>' . '<input class="button" type="submit" name="submit" value="' . __( 'Save', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '"/>' . '</p>'; echo '<h2>'. __( 'Multi-tiered referrals', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h2>'; echo '<label>'; echo sprintf( '<input type="checkbox" name="' . self::IXAP77 . '" %s />', $IXAP92 ? ' checked="checked" ' : '' ); echo ' '; echo __( 'Enable multi-tiered referrals', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</label>'; echo '<p class="description">'; echo __( 'Enable multi-tiered referrals to grant referrals to affiliates in Levels 1 and above.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '<br/>'; echo __( 'You <strong>must enable</strong> this option if you want to run a multi-tier affiliate program on the site, based on the level rate settings below.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<p>'; echo '<label>'; echo __( 'Levels', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo ' '; echo sprintf( '<input name="'.self::N_TIERS.'" type="text" value="%s" />', esc_attr( $n_tiers ) ); echo '</label>'; echo '</p>'; echo '<p class="description">'; echo sprintf( __( 'You can set the number of levels as desired (minimum 1 level). By default, %d levels are provided.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), self::IXAP78 ); echo '</p>'; echo '<br/>'; echo '<label>'; echo sprintf( '<input type="checkbox" name="' . self::INCLUDE_DIRECT . '" %s />', $include_direct ? ' checked="checked" ' : '' ); echo ' '; echo __( '<em>Direct</em> is a referrer', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</label>'; echo '<p class="description">'; echo __( 'When a new affiliate joins, use the <em>Direct</em> affiliate as referrer if no other affiliate has referred the new one.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<br/>'; echo '<label>'; echo sprintf( '<input type="checkbox" name="' . self::IXAP80 . '" %s />', $IXAP93 ? ' checked="checked" ' : '' ); echo ' '; echo __( 'Always record referrers', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</label>'; echo '<p class="description">'; echo __( 'If this option is enabled, referrers are recorded when an affiliate is added on the administrative back end, too. Normally, affiliate referrers are recorded only when an affiliate joins on the front end.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<h2>'. __( 'Level rates', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h2>'; echo '<p class="description">'; echo __( 'Affiliates in Level 1 and above get credited with a referral when an O.R. is credited with a referral and the level rate is greater than zero.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo $IXAP91; for ( $i = 0; $i < $n_tiers; $i++ ) { echo '<p>'; echo '<label>'; echo sprintf( __( 'Level %d', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), ( $i + 1 ) ); echo ' '; echo sprintf( '<input name="rate-%d" type="text" value="%s" />', esc_attr( $i ), esc_attr( isset( $IXAP85[$i] ) ? $IXAP85[$i] : '' ) ); echo '</label>'; echo '</p>'; } echo '<h3>' . __( 'Relative rates', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h3>'; echo '<label>'; echo sprintf( '<input type="checkbox" name="' . self::IXAP81 . '" %s />', $IXAP86 ? ' checked="checked" ' : '' ); echo ' '; echo __( 'Level rates are relative', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</label>'; echo '<p class="description">'; echo __( 'If this option is enabled, the level rates are relative to the amount that is credited to the O.R. instead of the order amount.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo ' '; echo __( 'Example: Assuming 30% for normal referrals and 20% for Level 1, for an order of 100$, affiliate A gets a 30$ referral, affiliate B gets 6$ (20% of 30$).', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; echo '<p>' . wp_nonce_field( self::IXAP76, self::NONCE, true, false ) . '<input class="button" type="submit" name="submit" value="' . __( 'Save', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '"/>' . '</p>'; echo '</div>' . '</form>'; affiliates_footer(); } public static function get_tree( $affiliate_ids = array(), &$IXAP35 = null, $include_invalid = false, $IXAP33 = null ) { global $affiliates_db; if ( $IXAP35 === null ) { $IXAP35 = array(); } $affiliates_relations_table = $affiliates_db->get_tablename( 'affiliates_relations' ); foreach( $affiliate_ids as $affiliate_id ) { if ( $include_invalid || affiliates_check_affiliate_id( $affiliate_id ) ) { $IXAP94 = $affiliates_db->get_objects( "SELECT to_affiliate_id FROM $affiliates_relations_table WHERE from_affiliate_id = %d", intval( $affiliate_id ) ); $IXAP35[$affiliate_id] = array(); if ( count( $IXAP94 ) > 0 ) { foreach ( $IXAP94 as $IXAP95 ) { if ( $IXAP33 === null || $IXAP33 > 0 ) { self::get_tree( array( $IXAP95->to_affiliate_id ), $IXAP35[$affiliate_id], $include_invalid, $IXAP33 === null ? null : $IXAP33 - 1 ); } } } } } } public static function render_tree( &$IXAP35, &$IXAP34, $IXAP33 = null, $IXAP37 = 0 ) { $IXAP34 .= sprintf( '<div class="depth depth-%d %s">', $IXAP37, $IXAP37 % 2 ? 'odd' : 'even' ); if ( $IXAP37 > 0 ) { $IXAP34 .= '<span class="title">'; $IXAP34 .= sprintf( __( 'Depth %d', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), $IXAP37 ); $IXAP34 .= '</span>'; } $IXAP34 .= '<ul class="branch" style="padding-left:1em;margin-right:1em;">'; foreach( $IXAP35 as $affiliate_id => $nodes ) { $IXAP34 .= '<li>'; $affiliate = affiliates_get_affiliate( $affiliate_id ); if ( $affiliate ) { $IXAP34 .= sprintf( '<a href="%s" title="%s">%s</a>', admin_url( 'admin.php?page=affiliates-admin-affiliates&action=edit&affiliate_id=' . intval( $affiliate_id ) ), sprintf( __( '%s, Affiliate ID %d, Depth %d', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), wp_filter_nohtml_kses( $affiliate['name'] ), intval( $affiliate_id ), $IXAP37 ), wp_filter_nohtml_kses( $affiliate['name'] ) ); } if ( !empty( $nodes ) ) { if ( $IXAP33 === null || $IXAP33 > 0 ) { self::render_tree( $nodes, $IXAP34, $IXAP33 === null ? null : $IXAP33 - 1, $IXAP37 + 1 ); } } $IXAP34 .= '</li>'; } $IXAP34 .= '</ul>'; $IXAP34 .= '</div>'; } public static function affiliates_after_edit_affiliate_attributes( $affiliate_id ) { global $affiliates_db; if ( $affiliate = affiliates_get_affiliate( $affiliate_id ) ) { $affiliates_relations_table = $affiliates_db->get_tablename( 'affiliates_relations' ); if ( isset( $_POST['referrer-nonce'] ) && wp_verify_nonce( $_POST['referrer-nonce'], 'assign-referrer' ) ) { $IXAP87 = isset( $_POST['referrer'] ) ? intval( $_POST['referrer'] ) : null; if ( $IXAP87 !== null ) { $IXAP96 = $affiliates_db->get_value( "SELECT from_affiliate_id FROM $affiliates_relations_table WHERE to_affiliate_id = %d", intval( $affiliate_id ) ); if ( $IXAP87 !== intval( $IXAP96 ) ) { if ( $affiliates_db->query( "DELETE FROM $affiliates_relations_table WHERE to_affiliate_id = %d AND from_affiliate_id = %d", intval( $affiliate_id ), intval( $IXAP96 ) ) ) { do_action( 'affiliates_removed_affiliate_relation', $IXAP96, $affiliate_id ); } if ( $IXAP87 !== 0 ) { if ( $IXAP97 = affiliates_get_affiliate( $IXAP87 ) ) { $IXAP83 = date( 'Y-m-d', time() ); if ( $affiliates_db->query( "INSERT INTO $affiliates_relations_table (from_affiliate_id,to_affiliate_id,type,from_date) VALUES (%d,%d,%s,%s)", intval( $IXAP87 ), intval( $affiliate_id ), 'referral', $IXAP83 ) ) { do_action( 'affiliates_added_affiliate_relation', $IXAP87, $affiliate_id, 'referral', $IXAP83 ); } } } } } } Affiliates_Relations_WordPress::view_relations( $affiliate_id ); echo '<h2>' . __( 'Tiers', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h2>'; echo '<h3>' . __( 'Referrer', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h3>'; $affiliates = affiliates_get_affiliates(); $IXAP59 = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $IXAP96 = $affiliates_db->get_value( "SELECT from_affiliate_id FROM $affiliates_relations_table WHERE to_affiliate_id = %d", intval( $affiliate_id ) ); $IXAP98 = $affiliates_db->get_objects( "SELECT to_affiliate_id FROM $affiliates_relations_table WHERE from_affiliate_id = %d", intval( $affiliate_id ) ); $IXAP99 = array(); foreach( $IXAP98 as $id ) { $IXAP99[] = intval( $id->to_affiliate_id ); } $IXAP100 = affiliates_get_affiliate( $IXAP96 ); echo '<form id="edit-referrer" action="' . esc_url( $IXAP59 ) . '" method="post">'; echo '<div>'; echo '<p>'; echo '<label>'; printf( '<select class="referrer" name="referrer" title="%s">', __( 'Referred by ...', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) ); printf( '<option value="0" %s>%s</option>', $IXAP100 === null ? ' selected="selected" ' : '', __( '---', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) ); foreach( $affiliates as $IXAP101 ) { if ( ( $IXAP101['affiliate_id'] != $affiliate_id ) && !in_array( intval( $IXAP101['affiliate_id'] ), $IXAP99 ) ) { printf( '<option value="%s" %s>%s</option>', esc_attr( $IXAP101['affiliate_id'] ), intval( $IXAP96 ) === intval( $IXAP101['affiliate_id'] ) ? ' selected="selected" ' : '', wp_strip_all_tags( stripslashes( $IXAP101['name'] ) ) ); } } echo '</select>'; echo ' '; echo '<span class="description">'; echo __( 'The referring affiliate can be changed with immediate effect by clicking <input class="button" type="submit" value="Assign" /> - this action can not be undone.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</span>'; echo '</label>'; echo '</p>'; wp_nonce_field( 'assign-referrer','referrer-nonce', true, true ); echo '</div>'; echo '</form>'; echo '<script type="text/javascript">'; echo 'if (typeof jQuery !== "undefined") {'; echo 'jQuery("select.referrer").chosen();'; echo '}'; echo '</script>'; if ( $IXAP96 = $affiliates_db->get_value( "SELECT from_affiliate_id FROM $affiliates_relations_table WHERE to_affiliate_id = %d", intval( $affiliate_id ) ) ) { if ( $IXAP100 = affiliates_get_affiliate( $IXAP96 ) ) { echo sprintf( __( '<strong>%s</strong> has been referred by %s.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), wp_filter_nohtml_kses( $affiliate['name'] ), sprintf( '<a href="%s" title="%s">%s</a>', admin_url( 'admin.php?page=affiliates-admin-affiliates&action=edit&affiliate_id=' . intval( $IXAP96 ) ), sprintf( __( '%s, ID %d', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), wp_filter_nohtml_kses( $IXAP100['name'] ), intval( $IXAP96 ) ), wp_filter_nohtml_kses( $IXAP100['name'] ) ) ); } } else { echo sprintf( __( '<strong>%s</strong> has not been referred by another affiliate.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), wp_filter_nohtml_kses( $affiliate['name'] ) ); } echo '<h3>' . __( 'Referred affiliates', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h3>'; echo '<p class="description">'; echo sprintf( __( 'Affiliates who have been referred directly by %s - direct descendants - are shown at Depth 1, affiliates in subsequent depths have been referred by descendants and are shown directly below each referrer.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), wp_filter_nohtml_kses( $affiliate['name'] ) ); echo '</p>'; echo '<p class="description">'; echo __( 'Level rates and depths: descendants at a certain depth N, when credited with a referral, can result in referrals credited to their referring affiliates at depths N-1, N-2, etc. when the level rates are set. The rate for level 1 applies to the referring affiliate at depth N-1, the rate for level 2 to the one at depth N-2 and so on.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; self::get_tree( array( $affiliate_id ), $IXAP35 ); if ( empty( $IXAP35[$affiliate_id] ) ) { echo '<p>'; echo sprintf( __( '%s has not referred any affiliates yet.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), wp_filter_nohtml_kses( $affiliate['name'] ) ); echo '</p>'; } else { $IXAP34 = ''; self::render_tree( $IXAP35, $IXAP34 ); echo $IXAP34; } } self::specific_levels( $affiliate_id ); } private static function specific_levels( $affiliate_id ) { $n_tiers = get_option( self::N_TIERS, self::IXAP78 ); $IXAP86 = get_option( self::IXAP81, false ); $IXAP102 = ''; if ( isset( $_POST['level-nonce'] ) && wp_verify_nonce( $_POST['level-nonce'], 'assign-level-rates' ) ) { delete_option( self::IXAP79 . '_' . intval( $affiliate_id ) ); $IXAP85 = array(); for( $i = 0; $i < $n_tiers; $i++ ) { if ( isset( $_POST['rate-' . $i] ) && ( $_POST['rate-' . $i] != '' ) ) { $IXAP89 = bcadd( '0', $_POST['rate-' . $i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); if ( bccomp( $IXAP89, '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) < 0 ) { $IXAP89 = bcadd( '0', '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } else if ( bccomp( $IXAP89, '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) { $IXAP89 = bcadd( '0', '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } $IXAP85[$i] = $IXAP89; } } if ( count( $IXAP85 ) > 0 ) { add_option( self::IXAP79 . '_' . intval( $affiliate_id ), $IXAP85, '', 'no' ); } } $IXAP103 = get_option( self::IXAP79, array() ); $IXAP85 = get_option( self::IXAP79 . '_' . intval( $affiliate_id ), array() ); $IXAP23 = 0; for( $i = 0; $i < $n_tiers; $i++ ) { if ( !empty( $IXAP85[$i] ) ) { $IXAP89 = bcadd( '0', $IXAP85[$i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); $sum = bcadd( $IXAP23, $IXAP85[$i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); if ( ( bccomp( $sum, '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) && ( bccomp( $IXAP85[$i], '0', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) ) { $IXAP102 .= '<div class="warning">'; $IXAP102 .= sprintf( __( 'The rate %s indicated for level %d exceeds 1.00 for the sum of rates.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), $IXAP85[$i], $i + 1 ); $IXAP102 .= '</div>'; } $IXAP23 = bcadd( $IXAP23, $IXAP85[$i], AFFILIATES_REFERRAL_AMOUNT_DECIMALS ); } } if ( bccomp( $IXAP23, '1', AFFILIATES_REFERRAL_AMOUNT_DECIMALS ) > 0 ) { $IXAP102 .= '<div class="warning">'; $IXAP102 .= sprintf( __( 'The sum of rates is %s and exceeds 1.00.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), $IXAP23 ); $IXAP102 .= ' '; $IXAP102 .= __( 'Although this might be intended, the total commission granted should normally not exceed the net transaction value on which commissions are based.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); $IXAP102 .= ' '; if ( $IXAP86 ) { $IXAP102 .= __( 'As relative level rates apply, these rates are relative to the amount that is credited to the O.R. instead of the order amount. Note that a sum of level rates equal to or greater than 1.00 means that the total commissions credited to tiers, is equal to - or higher than - the commission granted to the O.R.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); } else { $IXAP102 .= __( 'These rates are relative to the order amount. Note that a sum of level rates equal to or greater than 1.00 means that the total commissions credited to tiers, is equal to - or higher than - the originating order amount.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); } $IXAP102 .= '</div>'; } echo '<h2>'. __( 'Level rates', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</h2>'; echo '<p class="description">'; echo __( 'Specific level rates can be set for this affiliate here.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; if ( $IXAP86 ) { echo '<p class="description">'; echo __( 'Relative level rates apply.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; } if ( !empty( $IXAP102 ) ) { echo $IXAP102; } $IXAP59 = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; echo '<form id="edit-level-rates" action="' . esc_url( $IXAP59 ) . '" method="post">'; echo '<div>'; for ( $i = 0; $i < $n_tiers; $i++ ) { echo '<p>'; echo '<label>'; echo sprintf( __( 'Level %d', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), ( $i + 1 ) ); echo ' '; echo sprintf( '<input name="rate-%d" type="text" value="%s" placeholder="%s"/>', esc_attr( $i ), esc_attr( isset( $IXAP85[$i] ) ? $IXAP85[$i] : '' ), isset( $IXAP103[$i] ) ? sprintf( __( '%s (general level %d rate)', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), $IXAP103[$i], $i + 1 ) : __( 'No general rate applies.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) ); echo '</label>'; echo '</p>'; } echo '<p class="description">'; echo __( 'If a level rate is set here, it will override the general level rate that applies.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo ' '; echo __( 'Empty fields do not override the general level rate, while specifying 0 effectively voids the rate for this affiliate at that level.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ); echo '</p>'; wp_nonce_field( 'assign-level-rates','level-nonce', true, true ); echo '<p>'; echo sprintf( '<input class="button" type="submit" value="%s" title="%s" />', __( 'Set', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ), __( 'Click to set the level rates.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) ); echo ' '; echo '<span class="description">' . __( 'Click to set the level rates.', AFFILIATES_ENTERPRISE_PLUGIN_DOMAIN ) . '</span>'; echo '</p>'; echo '</div>'; echo '</form>'; } } add_action( 'init', array( 'Affiliates_Multi_Tier', 'init' ) ); 