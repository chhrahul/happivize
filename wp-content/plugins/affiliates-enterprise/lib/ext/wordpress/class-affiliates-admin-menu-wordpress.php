<?php
 class Affiliates_Admin_Menu_WordPress { const NONCE = 'aff-admin-menu'; const SETTINGS = 'aff-settings'; public static function init() { add_action( 'affiliates_admin_menu', array( __CLASS__, 'affiliates_admin_menu' ) ); add_action( 'affiliates_admin_menu', array( __CLASS__, 'affiliates_admin_menu_sort' ), 999 ); add_filter( 'affiliates_settings_sections', array( __CLASS__, 'affiliates_settings_sections' ) ); add_action( 'affiliates_settings_section', array( __CLASS__, 'affiliates_settings_section' ) ); add_filter( 'affiliates_help_tab_footer', array( __CLASS__, 'affiliates_help_tab_footer' ) ); add_filter( 'affiliates_help_tab_title', array( __CLASS__, 'affiliates_help_tab_title' ) ); } public static function affiliates_settings_sections( $sections ) { $sections['commissions'] = __( 'Commissions', AFFILIATES_PRO_PLUGIN_DOMAIN ); return $sections; } public static function affiliates_settings_section( $section ) { if ( $section == 'commissions' ) { self::affiliates_admin_settings(); } } public static function affiliates_admin_menu() { global $submenu; $IXAP228 = get_post_type_object( 'affiliates_banner' ); $IXAP57 = add_submenu_page( 'affiliates-admin', $IXAP228->labels->name, $IXAP228->labels->all_items, $IXAP228->cap->edit_posts, "edit.php?post_type=affiliates_banner" ); $IXAP75[] = $IXAP57; $IXAP57 = add_submenu_page( 'affiliates-admin', __( 'Totals', AFFILIATES_PRO_PLUGIN_DOMAIN ), __( 'Totals', AFFILIATES_PRO_PLUGIN_DOMAIN ), AFFILIATES_ACCESS_AFFILIATES, 'affiliates-admin-totals', array( 'Affiliates_Totals_WordPress', 'view' ) ); $IXAP75[] = $IXAP57; add_action( 'admin_print_styles-' . $IXAP57, 'affiliates_admin_print_styles' ); add_action( 'admin_print_scripts-' . $IXAP57, 'affiliates_admin_print_scripts' ); add_action( 'admin_print_styles-' . $IXAP57, 'affiliates_pro_admin_print_styles' ); add_action( 'admin_print_scripts-' . $IXAP57, 'affiliates_pro_admin_print_scripts' ); } public static function affiliates_admin_menu_sort() { global $submenu; if ( isset( $submenu['affiliates-admin'] )) { usort($submenu['affiliates-admin'], array( __CLASS__, 'menu_sort' ) ); } } public static function menu_sort( $IXAP229, $IXAP230 ) { global $submenu; $IXAP11 = 0; $IXAP231 = array( 'affiliates-admin' => 0, 'affiliates-admin-affiliates' => 1, 'affiliates-admin-hits' => 2, 'affiliates-admin-hits-affiliate' => 3, 'affiliates-admin-hits-uri' => 4, 'affiliates-admin-referrals' => 5, 'affiliates-admin-options' => 100, 'affiliates-admin-user-registration' => 1000, 'edit.php?post_type=affiliates_banner' => 50, 'affiliates-admin-settings' => 200, 'affiliates-admin-notifications' => 300, 'affiliates-admin-totals' => 10, 'affiliates-admin-tiers' => 2000, 'affiliates-admin-campaigns' => 2100, 'affiliates-admin-add-ons' => 9999 ); if ( isset( $IXAP229[2] ) && isset( $IXAP230[2] ) ) { if ( isset( $IXAP231[$IXAP229[2]] ) && isset( $IXAP231[$IXAP230[2]] ) ) { $IXAP11 = $IXAP231[$IXAP229[2]] - $IXAP231[$IXAP230[2]]; } } return $IXAP11; } public static function affiliates_admin_settings() { if ( !current_user_can( AFFILIATES_ADMINISTER_OPTIONS ) ) { wp_die( __( 'Access denied.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } $IXAP232 = Affiliates_Referral::get_referral_amount_methods(); $referral_amount_methods = array(); foreach ( $IXAP232 as $IXAP176 ) { if ( is_array( $IXAP176 ) ) { $IXAP161 = implode( "::", $IXAP176 ); } else { $IXAP161 = $IXAP176; } $referral_amount_methods[$IXAP161] = $IXAP161; } $referral_amount_methods = array_merge( array( '' => __( 'None', AFFILIATES_PRO_PLUGIN_DOMAIN ) ), $referral_amount_methods ); if ( isset( $_POST['submit'] ) ) { if ( wp_verify_nonce( $_POST[self::NONCE], self::SETTINGS ) ) { if ( !empty( $_POST[Affiliates_Referral::IXAP121] ) ) { $IXAP233 = trim( $_POST[Affiliates_Referral::IXAP121] ); if ( $IXAP233 = Affiliates_Attributes::validate_key( $IXAP233 ) ) { update_option( Affiliates_Referral::IXAP121, $IXAP233 ); } else { $IXAP233 = ''; delete_option( Affiliates_Referral::IXAP121 ); } } else { $IXAP233 = ''; delete_option( Affiliates_Referral::IXAP121 ); } if ( !empty( $_POST[Affiliates_Referral::IXAP122] ) ) { $IXAP234 = trim( $_POST[Affiliates_Referral::IXAP122] ); if ( $IXAP234 = Affiliates_Attributes::validate_value( $IXAP233, $IXAP234 ) ) { update_option( Affiliates_Referral::IXAP122, $IXAP234 ); } else { $IXAP234 = ''; delete_option( Affiliates_Referral::IXAP122 ); } } else { $IXAP234 = ''; delete_option( Affiliates_Referral::IXAP122 ); } Affiliates_Settings::settings_saved_notice(); } } echo '<div style="margin: 1em 1em 1em inherit; padding:0.31em 0.62em; background-color:#fff;">'; echo '<p>'; echo '<strong>'; echo __( 'Which method to choose &hellip;', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo '</strong>'; echo '</p>'; echo '<p>'; echo __( 'The most commonly used method is <em>Referral Rate</em>, corresponding to the typical case where affiliates are granted commissions in proportion to the purchase amount.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo '</p>'; echo '<ul>'; echo '<li>'; echo '<em>' . __( 'Referral Rate', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</em>'; echo ' &mdash; '; echo __( 'The commission amount is proportional to the amount of the originating transaction.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo ' '; echo __( 'This is recommended if commissions are a percentage of sales amounts.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo ' '; echo __( 'Note that the value indicated is a rate, for example, to grant 10% commissions on sales, indicate <code>0.10</code> as the value.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo ' '; echo __( 'Also note that if the value is equal to or greater than <code>1</code>, this would grant a commission amount higher than the actual (net) purchase amount &ndash; a case which is normally not desired.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo ' '; echo __( 'Using <code>0</code> results in zero commission amounts.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo '</li>'; echo '<li>'; echo '<em>' . __( 'Referral Amount', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</em>'; echo ' &mdash; '; echo __( 'A fixed commission amount is attributed with each referral.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo '</li>'; echo '<li>'; echo '<em>' . __( 'Referral Amount Method', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</em>'; echo ' &mdash; '; echo __( 'The commission amount is calculated by a specific algorithm.', AFFILIATES_PRO_PLUGIN_DOMAIN ); echo '</li>'; echo '</ul>'; echo '</div>'; $IXAP233 = get_option( Affiliates_Referral::IXAP121, '' ); $IXAP234 = get_option( Affiliates_Referral::IXAP122, '' ); $referral_calculation_options = array_merge( array( '' => __( 'None', AFFILIATES_PRO_PLUGIN_DOMAIN ) ), Affiliates_Attributes::get_keys() ); unset( $referral_calculation_options[Affiliates_Attributes::IXAP128] ); unset( $referral_calculation_options[Affiliates_Attributes::IXAP129] ); unset( $referral_calculation_options[Affiliates_Attributes::IXAP130] ); $referral_calculation_options_select = '<select id ="' . Affiliates_Referral::IXAP121 . '" name="' . Affiliates_Referral::IXAP121 . '">'; foreach ( $referral_calculation_options as $key => $value ) { $selected = ( $key == $IXAP233 ) ? ' selected="selected" ' : ''; $referral_calculation_options_select .= '<option value="' . $key . '" ' . $selected . '>' . $value . '</option>'; } $referral_calculation_options_select .= '</select>'; $IXAP235 = '<input name="' . Affiliates_Referral::IXAP122 . '" type="text" value="' . esc_attr( !is_array( $IXAP234 ) ? $IXAP234 : '' ) . '" />'; $IXAP236 = '<select name="' . Affiliates_Referral::IXAP122 . '">'; foreach ( $referral_amount_methods as $key => $IXAP161 ) { $selected = ( Affiliates_Referral::get_referral_amount_method( $key ) == Affiliates_Referral::get_referral_amount_method( $IXAP234 ) ) ? ' selected="selected" ' : ''; $IXAP236 .= '<option value="' . $key . '" ' . $selected . '>' . $IXAP161 . '</option>'; } $IXAP236 .= '</select>'; switch ( $IXAP233 ) { case Affiliates_Attributes::REFERRAL_AMOUNT_METHOD : $referral_calculation_value_input = $IXAP236; break; default: $referral_calculation_value_input = $IXAP235; } echo '<form action="" name="options" method="post">' . '<div>' . '<p class="description">' . __( 'These settings are used to calculate commissions for affiliates in general.', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</p>' . '<p>' . sprintf( '<label title="%s" for="' . Affiliates_Referral::IXAP121 . '">', __( 'Default referral calculation', AFFILIATES_PRO_PLUGIN_DOMAIN ) ) . __( 'Method', AFFILIATES_PRO_PLUGIN_DOMAIN ) . ' ' . $referral_calculation_options_select . '</label>' . '</p>' . '<p>' . sprintf( '<label title="%s" for="' . Affiliates_Referral::IXAP122 . '">', __( 'Default referral calculation value', AFFILIATES_PRO_PLUGIN_DOMAIN ) ) . __( 'Value', AFFILIATES_PRO_PLUGIN_DOMAIN ) . ' <span id="method-value-input-container">'. $referral_calculation_value_input . '</span>' . '</label>' . '</p>' . '<p>' . wp_nonce_field( self::SETTINGS, self::NONCE, true, false ) . '<input class="button button-primary" type="submit" name="submit" value="' . __( 'Save', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '"/>' . '</p>' . '</div>' . '</form>'; echo '<script type="text/javascript">'; echo 'if (typeof jQuery !== "undefined" ) {'; echo 'jQuery("#'.Affiliates_Referral::IXAP121.'").change(function(e){'; echo sprintf( 'if ( jQuery(this).val() == "%s" ) {', Affiliates_Attributes::REFERRAL_AMOUNT_METHOD ); echo sprintf( 'jQuery("#method-value-input-container").html(\'%s\');', $IXAP236 ); echo '} else {'; echo sprintf( 'jQuery("#method-value-input-container").html(\'%s\');', $IXAP235 ); echo '}'; echo '});'; echo '}'; echo '</script>'; affiliates_footer(); } public static function affiliates_admin_totals() { } public static function get_help_tab_footer() { $IXAP237 = '<div class="affiliates-documentation">'; if ( AFFILIATES_PLUGIN_NAME == 'affiliates-enterprise' ) { $IXAP237 .= sprintf( '<a href="%s">%s</a>', esc_attr( 'http://docs.itthinx.com/document/affiliates-enterprise/' ), esc_html( __( 'Online documentation', AFFILIATES_PRO_PLUGIN_DOMAIN ) ) ); } else { $IXAP237 .= sprintf( '<a href="%s">%s</a>', esc_attr( 'http://docs.itthinx.com/document/affiliates-pro/' ), esc_html( __( 'Online documentation', AFFILIATES_PRO_PLUGIN_DOMAIN ) ) ); } $IXAP237 .= '</div>'; return $IXAP237; } public static function affiliates_help_tab_footer( $IXAP237 ) { return self::get_help_tab_footer(); } public static function affiliates_help_tab_title( $IXAP190 ) { $IXAP190 = '<h3>'; if ( AFFILIATES_PLUGIN_NAME == 'affiliates-enterprise' ) { $IXAP190 .= __( 'Affiliates Enterprise', AFFILIATES_PRO_PLUGIN_DOMAIN ); } else { $IXAP190 .= __( 'Affiliates Pro', AFFILIATES_PRO_PLUGIN_DOMAIN ); } $IXAP190 .= '</h3>'; return $IXAP190; } } Affiliates_Admin_Menu_WordPress::init(); 