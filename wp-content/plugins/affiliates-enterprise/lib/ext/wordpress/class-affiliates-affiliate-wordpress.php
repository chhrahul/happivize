<?php
 class Affiliates_Affiliate_WordPress extends Affiliates_Affiliate { public static function get_user_affiliate_id( $user_id = null ) { global $affiliates_db; $IXAP11 = false; $user = null; if ( $user_id === null ) { if ( is_user_logged_in() ) { $user = wp_get_current_user(); } } else { $user = get_user_by( 'id', $user_id ); } if ( $user ) { $IXAP11 = parent::get_user_affiliate_id( $user->ID ); } return $IXAP11; } public static function update_name( $affiliate_id, $name ) { global $affiliates_db; $IXAP11 = false; $affiliate = self::get_affiliate( $affiliate_id ); if ( $affiliate ) { $name = Affiliates_Utility::filter( $name ); if ( !empty( $name ) ) { $IXAP264 = $affiliate->name; if ( $IXAP264 != $name ) { $affiliates_table = $affiliates_db->get_tablename( 'affiliates' ); if ( $affiliates_db->query( "UPDATE $affiliates_table SET name = %s WHERE affiliate_id = %d", $name, $affiliate_id ) ) { $IXAP11 = $name; do_action( 'affiliates_updated_name', $affiliate_id, $IXAP264, $name ); do_action( 'affiliates_updated_affiliate', intval( $affiliate_id ) ); } } } } return $IXAP11; } public static function update_email( $affiliate_id, $IXAP184 ) { global $affiliates_db; $IXAP11 = false; $affiliate = self::get_affiliate( $affiliate_id ); if ( $affiliate ) { if ( $IXAP184 = Affiliates_Validator::validate_email( $IXAP184 ) ) { $IXAP265 = $affiliate->email; if ( $IXAP265 != $IXAP184 ) { $affiliates_table = $affiliates_db->get_tablename( 'affiliates' ); if ( $affiliates_db->query( "UPDATE $affiliates_table SET email = %s WHERE affiliate_id = %d", $IXAP184, $affiliate_id ) ) { $IXAP11 = $IXAP184; do_action( 'affiliates_updated_email', $affiliate_id, $IXAP265, $IXAP184 ); do_action( 'affiliates_updated_affiliate', intval( $affiliate_id ) ); } } } } return $IXAP11; } public static function update_attribute( $affiliate_id, $key, $value ) { global $affiliates_db; $IXAP11 = false; $affiliate = self::get_affiliate( $affiliate_id ); if ( $affiliate && Affiliates_Attributes::validate_key( $key ) ) { if ( $value = Affiliates_Attributes::validate_value( $key, $value ) ) { $affiliates_attributes_table = $affiliates_db->get_tablename( 'affiliates_attributes' ); $IXAP266 = $affiliates_db->get_value( "SELECT attr_value FROM $affiliates_attributes_table WHERE affiliate_id = %d AND attr_key = %s", $affiliate_id, $key ); if ( $IXAP266 != $value ) { if ( $affiliates_db->query( "INSERT INTO $affiliates_attributes_table SET affiliate_id = %d, attr_key = %s, attr_value = %s ON DUPLICATE KEY UPDATE attr_value = %s", $affiliate_id, $key, $value, $value ) ) { $IXAP11 = $value; do_action( 'affiliates_updated_attribute', $affiliate_id, $key, $IXAP266, $value ); do_action( 'affiliates_updated_affiliate', intval( $affiliate_id ) ); } } } } return $IXAP11; } function edit( $affiliate_id ) { global $wpdb; if ( !current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { wp_die( __( 'Access denied.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } $affiliate = affiliates_get_affiliate( intval( $affiliate_id ) ); if ( empty( $affiliate ) ) { wp_die( __( 'No such affiliate.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } $affiliates_users_table = _affiliates_get_tablename( 'affiliates_users' ); $affiliate_user = null; $affiliate_user_edit = ''; $affiliate_user_fields = ''; $affiliate_user_id = $wpdb->get_var( $wpdb->prepare( "SELECT user_id FROM $affiliates_users_table WHERE affiliate_id = %d", intval( $affiliate_id ) ) ); if ( $affiliate_user_id !== null ) { $affiliate_user = get_user_by( 'id', intval( $affiliate_user_id ) ); if ( $affiliate_user ) { if ( current_user_can( 'edit_user', $affiliate_user->ID ) ) { $affiliate_user_edit = sprintf( __( 'Edit %s', AFFILIATES_PRO_PLUGIN_DOMAIN ) , '<a target="_blank" href="' . esc_url( "user-edit.php?user_id=$affiliate_user->ID" ) . '">' . $affiliate_user->user_login . '</a>' ); } require_once AFFILIATES_CORE_LIB . '/class-affiliates-settings.php'; require_once AFFILIATES_CORE_LIB . '/class-affiliates-settings-registration.php'; $registration_fields = Affiliates_Settings_Registration::get_fields(); foreach( Affiliates_Registration::get_skip_meta_fields() as $key ) { unset( $registration_fields[$key] ); } foreach( $registration_fields as $name => $field ) { if ( $field['enabled'] ) { $affiliate_user_fields .= '<div class="field">'; $affiliate_user_fields .= '<label>'; $affiliate_user_fields .= esc_html( stripslashes( $field['label'] ) ); $affiliate_user_fields .= ' '; $type = isset( $field['type'] ) ? $field['type'] : 'text'; $value = get_user_meta( $affiliate_user->ID, $name , true ); $affiliate_user_fields .= sprintf( '<input type="text" value="%s" readonly="readonly" />', esc_attr( stripslashes( $value ) ) ); $affiliate_user_fields .= '</label>'; $affiliate_user_fields .= '</div>'; } } } } $IXAP59 = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $IXAP59 = remove_query_arg( 'action', $IXAP59 ); $IXAP59 = remove_query_arg( 'affiliate_id', $IXAP59 ); $name = isset( $_POST['name-field'] ) ? $_POST['name-field'] : $affiliate['name']; $IXAP184 = isset( $_POST['email-field'] ) ? $_POST['email-field'] : $affiliate['email']; $user_login = isset( $_POST['user-field'] ) ? $_POST['user-field'] : ( $affiliate_user != null ? $affiliate_user->user_login : '' ); $IXAP15 = isset( $_POST['from-date-field'] ) ? $_POST['from-date-field'] : $affiliate['from_date']; $IXAP16 = isset( $_POST['thru-date-field'] ) ? $_POST['thru-date-field'] : $affiliate['thru_date']; $status = isset( $_POST['status'] ) ? $_POST['status'] : $affiliate['status']; $notice = ''; if ( isset( $_POST['errors'] ) && is_array( $_POST['errors'] ) ) { $notice_msg = array(); foreach( $_POST['errors'] as $IXAP267 ) { switch ( $IXAP267 ) { case AFFILIATES_ADMIN_AFFILIATES_ERROR_NAME_EMPTY : $notice_msg[] = __( 'Name can not be empty.', 'affiliates' ); break; case AFFILIATES_ADMIN_AFFILIATES_ERROR_USERNAME : $notice_msg[] = __( 'The username does not exist.', 'affiliates' ); break; default: $notice_msg[] = __( 'Something went wrong.', 'affiliates' ); break; } } $notice .= '<div class="updated error">'; $notice .= implode( '<br/>', $notice_msg ); $notice .= '</div>'; } $IXAP34 = '<div class="manage-affiliates">' . '<div>' . '<h1>' . __( 'Edit an affiliate', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</h1>' . '</div>' . $notice . '<form id="edit-affiliate" action="' . esc_url( $IXAP59 ) . '" method="post">' . '<div class="affiliate edit">' . '<input id="affiliate-id-field" name="affiliate-id-field" type="hidden" value="' . esc_attr( intval( $affiliate_id ) ) . '"/>' . '<div class="field">' . '<label class="field-label first required">' . '<span class="label">' . __( 'Name', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</span>' . ' ' . '<input id="name-field" name="name-field" class="namefield" type="text" value="' . esc_attr( stripslashes( $name ) ) . '"/>' . '</label>' . '</div>' . '<div class="field">' . '<label for="email-field" class="field-label">' . '<span class="label">' . __( 'Email', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</span>' . ' ' . '<input id="email-field" name="email-field" class="emailfield" type="text" value="' . esc_attr( $IXAP184 ) . '"/>' . '</label>' . ' ' . '<span class="description">' . __( "If a valid <strong>Username</strong> is specified and no email is given, the user's email address will be used automatically.", AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</span>' . '</div>' . '<div class="field">' . '<label for="user-field" class="field-label">' . '<span class="label">' . __( 'Username', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</span>' . ' ' . '<input id="user-field" name="user-field" class="userfield" type="text" value="' . esc_attr( stripslashes( $user_login ) ) . '"/>' . '</label>' . ' ' . $affiliate_user_edit . '</div>' . $affiliate_user_fields . '<div class="field">' . '<label class="field-label first">' . '<span class="label">' . __( 'From', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</span>' . ' ' . '<input id="from-date-field" name="from-date-field" class="datefield" type="text" value="' . esc_attr( $IXAP15 ) . '"/>' . '</label>' . '</div>' . '<div class="field">' . '<label class="field-label">' . '<span class="label">' . __( 'Until', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</span>' . ' ' . '<input id="thru-date-field" name="thru-date-field" class="datefield" type="text" value="' . esc_attr( $IXAP16 ) . '"/>' . '</label>' . '</div>'; $IXAP34 .= '<div class="field">' . '<label class="field-label">' . '<span class="label">' . __( 'Status', 'affiliates' ) . '</span>' . ' ' . '<select id="status" name="status" class="datafield">' . '<option value="active" ' . ( $status == 'active' ? 'selected="selected"' : '' ) . ' >' . __('Accepted', 'affiliates') . '</option>' . '<option value="pending" ' . ( $status == 'pending' ? 'selected="selected"' : '' ) . ' >' . __('Pending', 'affiliates') . '</option>' . '<option value="deleted" ' . ( $status == 'deleted' ? 'selected="selected"' : '' ) . ' >' . __('Deleted', 'affiliates') . '</option>' . '</select>' . '</label>' . '</div>'; $IXAP34 .= '<div class="field">' . wp_nonce_field( plugin_basename( __FILE__ ), AFFILIATES_ADMIN_AFFILIATES_NONCE, true, false ) . '<input class="button button-primary" type="submit" value="' . __( 'Save', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '"/>' . '<input type="hidden" value="edit" name="action"/>' . ' ' . '<a class="button" class="cancel" href="' . esc_url( $IXAP59 ) . '">' . __( 'Cancel', AFFILIATES_PRO_PLUGIN_DOMAIN ) . '</a>' . '</div>' . '</div>' . '</form>' . '</div>'; echo $IXAP34; do_action( 'affiliates_after_edit_affiliate_form', $affiliate_id ); $IXAP224 = new Affiliates_Attributes_WordPress(); $IXAP224->view( $affiliate_id ); do_action( 'affiliates_after_edit_affiliate_attributes', $affiliate_id ); affiliates_footer(); } function edit_submit() { global $wpdb; $IXAP11 = array(); if ( !current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { wp_die( __( 'Access denied.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } if ( !wp_verify_nonce( $_POST[AFFILIATES_ADMIN_AFFILIATES_NONCE], plugin_basename( __FILE__ ) ) ) { wp_die( __( 'Access denied.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } $affiliates_table = _affiliates_get_tablename( 'affiliates' ); $affiliates_users_table = _affiliates_get_tablename( 'affiliates_users' ); $affiliate_id = isset( $_POST['affiliate-id-field'] ) ? $_POST['affiliate-id-field'] : null; $is_direct = false; $affiliate = null; if ( $affiliate = $wpdb->get_row( $wpdb->prepare( "SELECT * FROM $affiliates_table WHERE affiliate_id = %d", intval( $affiliate_id ) ) ) ) { $is_direct = isset( $affiliate->type ) && ( $affiliate->type == AFFILIATES_DIRECT_TYPE ); } if ( empty( $affiliate ) ) { wp_die( __( 'No such affiliate.', AFFILIATES_PRO_PLUGIN_DOMAIN ) ); } $affiliate_old = self::get_affiliate( $affiliate_id ); $name = isset( $_POST['name-field'] ) ? trim( $_POST['name-field'] ) : null; if ( $is_direct ) { $name = AFFILIATES_DIRECT_NAME; } if ( empty( $name ) ) { $IXAP11['errors'][] = AFFILIATES_ADMIN_AFFILIATES_ERROR_NAME_EMPTY; } $IXAP268 = true; if ( !empty( $_POST['user-field'] ) ) { $IXAP269 = trim( $_POST['user-field'] ); if ( !empty( $IXAP269 ) ) { if ( !get_user_by( 'login', $IXAP269 ) ) { $IXAP268 = false; $IXAP11['errors'][] = AFFILIATES_ADMIN_AFFILIATES_ERROR_USERNAME; } } } if ( !empty( $name ) && $IXAP268 ) { $data = array( 'name' => $name ); $IXAP270 = array( '%s' ); $IXAP184 = trim( $_POST['email-field'] ); if ( is_email( $IXAP184 ) ) { $data['email'] = $IXAP184; $IXAP270[] = '%s'; } else { $data['email'] = null; $IXAP270[] = 'NULL'; } $IXAP15 = $_POST['from-date-field']; if ( empty( $IXAP15 ) ) { $IXAP15 = date( 'Y-m-d', time() ); } else { $IXAP15 = date( 'Y-m-d', strtotime( $IXAP15 ) ); } $data['from_date'] = $IXAP15; $IXAP270[] = '%s'; $IXAP16 = $_POST['thru-date-field']; if ( !empty( $IXAP16 ) && strtotime( $IXAP16 ) < strtotime( $IXAP15 ) ) { $IXAP16 = null; } if ( !empty( $IXAP16 ) ) { $IXAP16 = date( 'Y-m-d', strtotime( $IXAP16 ) ); $data['thru_date'] = $IXAP16; $IXAP270[] = '%s'; } else { $data['thru_date'] = null; $IXAP270[] = 'NULL'; } $status = $_POST['status']; $old_status = $affiliate->status; if ( empty( $status ) ) { $status = get_option( 'aff_status', 'active' ); } $data['status'] = $status; $IXAP270[] = '%s'; $sets = array(); $values = array(); $IXAP271 = 0; foreach( $data as $key => $value ) { $sets[] = $key . ' = ' . $IXAP270[$IXAP271]; if ( $value ) { $values[] = $value; } $IXAP271++; } if ( !empty( $sets ) ) { $sets = implode( ', ', $sets ); $values[] = intval( $affiliate_id ); $IXAP3 = $wpdb->prepare( "UPDATE $affiliates_table SET $sets WHERE affiliate_id = %d", $values ); $wpdb->query( $IXAP3 ); } $IXAP272 = $wpdb->get_row( $wpdb->prepare(" SELECT affiliate_id, user_id, user_login FROM $affiliates_users_table LEFT JOIN $wpdb->users ON $affiliates_users_table.user_id = $wpdb->users.ID WHERE affiliate_id = %d", intval( $affiliate_id ) ) ); $new_associated_user_login = trim( $_POST['user-field'] ); if ( ( empty( $new_associated_user_login ) && !empty( $IXAP272 ) ) || ( !empty( $IXAP272 ) && ( strcmp( $IXAP272->user_login, $new_associated_user_login ) !== 0 ) ) ) { $wpdb->query( $wpdb->prepare( "DELETE FROM $affiliates_users_table WHERE affiliate_id = %d", intval( $affiliate_id ) ) ); } if ( !empty( $affiliate_id ) && !empty( $new_associated_user_login ) && ( empty( $IXAP272 ) || ( !empty( $IXAP272 ) && ( strcmp( $IXAP272->user_login, $new_associated_user_login ) !== 0 ) ) ) ) { $new_associated_user = get_user_by( 'login', $new_associated_user_login ); if ( !empty( $new_associated_user ) ) { if ( $wpdb->query( $wpdb->prepare( "INSERT INTO $affiliates_users_table SET affiliate_id = %d, user_id = %d", intval( $affiliate_id ), intval( $new_associated_user->ID ) ) ) ) { if ( empty( $IXAP184 ) && !empty( $new_associated_user->user_email ) ) { $wpdb->query( $wpdb->prepare( "UPDATE $affiliates_table SET email = %s WHERE affiliate_id = %d", $new_associated_user->user_email, $affiliate_id ) ); } } } } $affiliate_new = self::get_affiliate( $affiliate_id ); if ( $affiliate_old->name != $affiliate_new->name ) { do_action( 'affiliates_updated_name', $affiliate_id, $affiliate_old->name, $affiliate_new->name ); } if ( $affiliate_old->email != $affiliate_new->email ) { do_action( 'affiliates_updated_email', $affiliate_id, $affiliate_old->email, $affiliate_new->email ); } if ( !empty( $affiliate_id ) ) { do_action( 'affiliates_updated_affiliate', intval( $affiliate_id ) ); if ( !empty( $status ) ) { do_action( 'affiliates_updated_affiliate_status', intval( $affiliate_id ), $old_status, $status ); } } } return $IXAP11; } } 